interface Movable {
    void go();
}

abstract class Human {
    private int age;
    private String name;

    // Конструктор
    public Human(int age, String name) {
        this.age = age;
        this.name = name;
    }

    public int getAge() {
        return age;
    }

    public void setAge(int age) {
        this.age = age;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public abstract void printAge();
}

class Woman extends Human implements Movable {
    public Woman(int age, String name) {
        super(age, name);
    }

    @Override
    public void go() {
        System.out.println(getName() + " is strolling!");
    }

    @Override
    public void printAge() {
        System.out.println("Age of " + getName() + ": " + getAge());
    }
}

class Man extends Human implements Movable {
    public Man(int age, String name) {
        super(age, name);
    }

    @Override
    public void go() {
        System.out.println(getName() + " is marching!");
    }

    @Override
    public void printAge() {
        System.out.println("Age of " + getName() + ": " + getAge());
    }
}

public class Main {
    public static void main(String[] args) {
        Woman woman = new Woman(28, "Sophia");
        woman.printAge();
        woman.go();

        Man man = new Man(35, "Liam");
        man.printAge();
        man.go();
    }
}
